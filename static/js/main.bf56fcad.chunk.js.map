{"version":3,"sources":["types/TodoStatus.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoStatus","TodoList","todos","selectedTodoId","selectTodo","className","map","todo","isActive","id","cn","completed","title","type","onClick","TodoFilter","todoStatus","selectStatus","query","setQuery","value","onChange","event","target","Completed","Active","All","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","Loader","TodoModal","closeModal","useState","user","setUser","loadData","a","userFromServer","useEffect","href","email","name","App","setTodos","setSelectedTodoId","setTodoStatus","todosFromServer","selectedTodo","find","length","loweredQuery","toLowerCase","filter","includes","filterTodos","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf56fcad.chunk.js","sourcesContent":["export enum TodoStatus {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId: number;\n  selectTodo: (todoId: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  selectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const isActive = todo.id === selectedTodoId;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': isActive,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {!todo.completed\n              ? (\n                <td className=\"is-vcentered\" />\n              ) : (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              )}\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn(\n                {\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {isActive\n                ? (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => selectTodo(0)}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye-slash\" />\n                    </span>\n                  </button>\n                ) : (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => selectTodo(todo.id)}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  </button>\n                )}\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { TodoStatus } from '../../types/TodoStatus';\n\ntype Props = {\n  todoStatus: TodoStatus;\n  selectStatus: (\n    status: TodoStatus\n  ) => void;\n  query: string;\n  setQuery: (searchText: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  todoStatus,\n  selectStatus,\n  query,\n  setQuery,\n}) => {\n  const handleStatusSelection = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    switch (event.target.value) {\n      case TodoStatus.Completed:\n        selectStatus(TodoStatus.Completed);\n        break;\n\n      case TodoStatus.Active:\n        selectStatus(TodoStatus.Active);\n        break;\n\n      default:\n        selectStatus(TodoStatus.All);\n        break;\n    }\n  };\n\n  const handleSearch = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={todoStatus}\n            onChange={handleStatusSelection}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleSearch}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo | null;\n  closeModal: () => void\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, closeModal }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const loadData = async (userId: number) => {\n    const userFromServer = await getUser(userId);\n\n    if (userFromServer) {\n      setUser(userFromServer);\n    }\n  };\n\n  useEffect(() => {\n    if (todo) {\n      loadData(todo.userId);\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!todo || !user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoStatus } from './types/TodoStatus';\n\ntype SelectHandler = (todoId: number) => void;\ntype CloseHanlder = () => void;\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [todoStatus, setTodoStatus] = useState<TodoStatus>(TodoStatus.All);\n  const [query, setQuery] = useState('');\n\n  const loadData = async () => {\n    const todosFromServer = await getTodos();\n\n    setTodos(todosFromServer);\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const handleTodoSelect: SelectHandler = (todoId) => {\n    setSelectedTodoId(todoId);\n  };\n\n  const handleModalClose: CloseHanlder = () => {\n    setSelectedTodoId(0);\n  };\n\n  const selectedTodo = todos.find(todo => todo.id === selectedTodoId) || null;\n\n  const filterTodos = () => {\n    const loweredQuery = query.toLowerCase();\n    const filteredTodos = todos.filter(({ title }) => {\n      const loweredTitle = title.toLowerCase();\n\n      return loweredTitle.includes(loweredQuery);\n    });\n\n    return filteredTodos.filter(todo => {\n      switch (todoStatus) {\n        case TodoStatus.Completed:\n          return todo.completed;\n\n        case TodoStatus.Active:\n          return !todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todoStatus={todoStatus}\n                selectStatus={setTodoStatus}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            {!todos.length\n              ? (\n                <div className=\"block\">\n                  <Loader />\n                </div>\n              ) : (\n                <div className=\"block\">\n                  <TodoList\n                    todos={filterTodos()}\n                    selectedTodoId={selectedTodoId}\n                    selectTodo={handleTodoSelect}\n                  />\n                </div>\n              )}\n          </div>\n        </div>\n      </div>\n\n      {selectedTodoId !== 0 && (\n        <TodoModal todo={selectedTodo} closeModal={handleModalClose} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}